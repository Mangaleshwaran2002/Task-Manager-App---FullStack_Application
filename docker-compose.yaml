version: '3.8'

services:
  db:
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  backend:
    build:
      context: ./backend
      args:
        DATABASE_URL: ${DATABASE_URL}
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT}
    depends_on:
      - db
    expose:
      - ${PORT}
    restart: unless-stopped


  frontend:
    build:
      context: ./frontend
    environment:
      - VITE_API_URL=/api
    command: npm run build
    volumes:
      - ./frontend/dist:/app/dist

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
